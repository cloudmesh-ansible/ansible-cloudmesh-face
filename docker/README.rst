OPENFACE SETUP in DOCKER
=========================

Notation:

* commands executed on the host system are indicated with $
* commands executed on the container are indicated with root11111111# , where root11111111 will be the container id.
* the name of the container is `openface`, which can be checked by command "docker ps".

1. Install docker
-----------------

OSX
^^^

To install docker on OSX follow these steps

a. Download and install docker Toolbox: https://www.docker.com/toolbox

b. check if docker commands are installed in /usr/local/bin::

      $ ls /usr/local/bin/docker*
      
c. Once docker is installed, got to your launch pad and click on quickstart docker icon to launch it with the terminal. 
      
   NOTE : Henceforth all the commands will be executed on this terminal where docker has been started.
   
d. For subsequent steps remember to login to docker if not already::   

      $ docker login

e. Test out a simple docker example::

      $ docker run hello-world
      

   
Windows
^^^^^^^^

TBD in future

Ubuntu
^^^^^^^

TBD in future

Centos
^^^^^^^

TBD in future

RHEL
^^^^^^^

TBD in future

2. OpenFace Application
-----------------------

<1> MULTI-SERVER REPLICATION STEPS ::
    ===============================
      These steps will execute openface project on multiple docker swarm nodes and collect their optputs for graph plots.
      
1. Clone the ansible-cloudmesh-face github respository ::
    
        $ mkdir -p ansible-cloudmesh-face
        $ git clone https://github.com/cloudmesh/ansible-cloudmesh-face.git
        $ cd ansible-cloudmesh-face/docker/

    To check Dokcer is installed properly ::
      
        $ source openface_dep.sh 
  

2. Create the docker swarm cluster with openface containers ::

   Following script will create various nodes in docker swarm cluster. 
   The name of the nodes will be openface-node<number of the node>.Master node can be identified as openface-master and key-store as openface-keystore. 
   
        docker$ source openface-multiserver.sh <Number of swarn nodes to be run>


3. Container will be created for nodes in the swarm one-by-one. First node will create the conatiner and it will pull the bamos/openface image. Upon image pull the command prompt will change from docker $ to root1111111# , i.e. promt control changes from host to container. Once on container change directory to dcoker folder by ::

        root1111111# cd /root/openface/docker

4. Verify if the required scripts are present in container ::
   demo2.sh and demo3.sh should be present in the current directory ::
   
         docker# ls -l  

5. To run Face Comparison demo ::
   This will create files “docker_compare_<container-id>.csv" and  “docker_compare_<container-id>.txt" as output in the current 
   directory.
      
       docker# source demo2.sh <Number of times script to be run>
    
   Verify these output files :: 
   
       docker# cat docker_compare_$CID.csv         
      
       docker# cat docker_compare_$CID.txt

   Note: CID is the id of the container.

6. To run Face Recognotion demo ::
   This will carete files “docker_classifier_<container-id>.csv" and  “docker_classifier_<container-id>.txt" as output in the current directory.
   
       docker# source demo3.sh <Number of times script to be run>
      
   Verify these output files ::
   
       docker# cat docker_classifier_$CID.csv

       docker# cat docker_classifier_$CID.txt

  Note: CID is the id of the container.
  

7. Exit from the container of node1 ::
  
       docker# exit
  
8. As soon as node1 is exited new container for next node will open and it will pull the bamos/openface image. Upon image pull the command prompt will change from docker $ to root1111111# and this will be repeated for all the nodes in the swarm cluster::

        Repeat step 3 to 7 for all the nodes
   
   
9. At the end it will ask if you want to kill the docker-machine swarm nodes. Choose "Yes" and move forward to comparision graph plot. The results will be saved on mounted folder i.e /ansible-cloudmesh-face/docker on host.On host machine under docker folder verify the output files generated by multiple container ::

         docker$ ls -l

10. Gather csv files for graph plot ::

11. Get a pictorial presentation of docker and ubuntu time comaprision ::

12. Anytime to check the docker swarm nodes run ::
     
         $ docker-machine ls






<2>SINGLE-SERVER REPLICATION STEPS ::
   ===============================

      These steps will execute openface project on single docker container collect optputs for graph plots.


1. Clone the ansible-cloudmesh-face github respository::
    
        $ mkdir -p ansible-cloudmesh-face
        $ git clone https://github.com/cloudmesh/ansible-cloudmesh-face.git
        $ cd ansible-cloudmesh-face/docker/

d. To check Dokcer is installed properly ::
      
      $ source openface_dep.sh


2. Create the openface container::

   This will install all the required dependencies, check if docker is installed properly,copy the required scripts from host to
   docker,pull bamos/openface docker hub repositiory and create a docker container called `openface`.The prompt will change from
   $docker> to container-ID> .  Once in the container's command-line change the directory to /root/src/openface.

        $ source install-openfacedocker.sh

        root1111111# cd /root/openface/docker
     
   
3. Verify if the required scripts are present in container::

   demo2.sh and demo3.sh should be present in the current directory ::
   
         docker# ls -l  
      
     

4. To run Face Comparison demo ::

   This will carete files “docker_compare_time.csv" and  “compare_output.txt" as output in the current directory.
      
       docker# source demo2.sh <Number of times script to be run>
    
   Verify these output files :: 
   
       docker# cat docker_compare_$CID.csv         
      
       docker# cat docker_compare_$CID.txt

   Note CID is the id of the container.

5. To run Face Recognotion demo::

   This will carete files “docker_classifier_time.csv" and  “classifier_output.txt" as output in the current directory.
   
       docker# source demo3.sh <Number of times script to be run>
      
   Verify these output files ::
   
       docker# cat docker_classifier_$CID.csv

       docker# cat docker_classifier_$CID.txt

6. Detach from the running container ::

   Once the demo2.sh and demo3.sh output files from step 5 are verfied and you are ready for performance evaluation.
   Detach the container from your command line and let it be running on the backgroud using the command:
      
       docker# cntrl p + cntrl q

7. Gather the CSV files for evaluation ::

   In the host following command will gather all the csv created in docker conatiner to host "ansible-cloudmesh-face/docker” folder to
   be used for time evaluation.
      
       $docker>source gather.sh

8. On the host verify the CSV files :: 

        $docker> ls -l performance/

   The output files “docker_compare_time.cv” and “docker_classifier_time.cv” should be present here.
   

9. For future use save the container content ::

       $ docker commit openface

   You can re-attach the saved container by :: 
   
       $ docker exec -t -i openface /bin/bash

   OR
      
       $ docker start openface

       $ docker attach openface
      

10. To stop the docker container ::
      
       openface> docker kill openface

    Warning:  This will stop the container permanently and all the container content will be deleted.
      
    Verify the container has been closed ::
    
       openface> docker ps


